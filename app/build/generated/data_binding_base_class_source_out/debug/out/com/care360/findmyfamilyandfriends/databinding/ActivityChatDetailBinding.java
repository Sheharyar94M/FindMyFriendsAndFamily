// Generated by view binder compiler. Do not edit!
package com.care360.findmyfamilyandfriends.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.utils.widget.ImageFilterView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.care360.findmyfamilyandfriends.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChatDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout consBottom;

  @NonNull
  public final ConstraintLayout consMessage;

  @NonNull
  public final ConstraintLayout consTop;

  @NonNull
  public final EditText editTextMessage;

  @NonNull
  public final ShapeableImageView imgViewSendMessage;

  @NonNull
  public final LayoutNoMessagesBinding layoutNoMessages;

  @NonNull
  public final ImageFilterView profileImg;

  @NonNull
  public final ProgressBar progressSendMessage;

  @NonNull
  public final RecyclerView recyclerViewChat;

  @NonNull
  public final TextView txtBackPressed;

  @NonNull
  public final TextView txtNameFirstChar;

  @NonNull
  public final TextView txtUserName;

  private ActivityChatDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout consBottom, @NonNull ConstraintLayout consMessage,
      @NonNull ConstraintLayout consTop, @NonNull EditText editTextMessage,
      @NonNull ShapeableImageView imgViewSendMessage,
      @NonNull LayoutNoMessagesBinding layoutNoMessages, @NonNull ImageFilterView profileImg,
      @NonNull ProgressBar progressSendMessage, @NonNull RecyclerView recyclerViewChat,
      @NonNull TextView txtBackPressed, @NonNull TextView txtNameFirstChar,
      @NonNull TextView txtUserName) {
    this.rootView = rootView;
    this.consBottom = consBottom;
    this.consMessage = consMessage;
    this.consTop = consTop;
    this.editTextMessage = editTextMessage;
    this.imgViewSendMessage = imgViewSendMessage;
    this.layoutNoMessages = layoutNoMessages;
    this.profileImg = profileImg;
    this.progressSendMessage = progressSendMessage;
    this.recyclerViewChat = recyclerViewChat;
    this.txtBackPressed = txtBackPressed;
    this.txtNameFirstChar = txtNameFirstChar;
    this.txtUserName = txtUserName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChatDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChatDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_chat_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChatDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cons_bottom;
      ConstraintLayout consBottom = ViewBindings.findChildViewById(rootView, id);
      if (consBottom == null) {
        break missingId;
      }

      id = R.id.cons_message;
      ConstraintLayout consMessage = ViewBindings.findChildViewById(rootView, id);
      if (consMessage == null) {
        break missingId;
      }

      id = R.id.cons_top;
      ConstraintLayout consTop = ViewBindings.findChildViewById(rootView, id);
      if (consTop == null) {
        break missingId;
      }

      id = R.id.edit_text_message;
      EditText editTextMessage = ViewBindings.findChildViewById(rootView, id);
      if (editTextMessage == null) {
        break missingId;
      }

      id = R.id.img_view_send_message;
      ShapeableImageView imgViewSendMessage = ViewBindings.findChildViewById(rootView, id);
      if (imgViewSendMessage == null) {
        break missingId;
      }

      id = R.id.layout_no_messages;
      View layoutNoMessages = ViewBindings.findChildViewById(rootView, id);
      if (layoutNoMessages == null) {
        break missingId;
      }
      LayoutNoMessagesBinding binding_layoutNoMessages = LayoutNoMessagesBinding.bind(layoutNoMessages);

      id = R.id.profile_img;
      ImageFilterView profileImg = ViewBindings.findChildViewById(rootView, id);
      if (profileImg == null) {
        break missingId;
      }

      id = R.id.progress_send_message;
      ProgressBar progressSendMessage = ViewBindings.findChildViewById(rootView, id);
      if (progressSendMessage == null) {
        break missingId;
      }

      id = R.id.recycler_view_chat;
      RecyclerView recyclerViewChat = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewChat == null) {
        break missingId;
      }

      id = R.id.txt_back_pressed;
      TextView txtBackPressed = ViewBindings.findChildViewById(rootView, id);
      if (txtBackPressed == null) {
        break missingId;
      }

      id = R.id.txt_name_first_char;
      TextView txtNameFirstChar = ViewBindings.findChildViewById(rootView, id);
      if (txtNameFirstChar == null) {
        break missingId;
      }

      id = R.id.txt_user_name;
      TextView txtUserName = ViewBindings.findChildViewById(rootView, id);
      if (txtUserName == null) {
        break missingId;
      }

      return new ActivityChatDetailBinding((ConstraintLayout) rootView, consBottom, consMessage,
          consTop, editTextMessage, imgViewSendMessage, binding_layoutNoMessages, profileImg,
          progressSendMessage, recyclerViewChat, txtBackPressed, txtNameFirstChar, txtUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
