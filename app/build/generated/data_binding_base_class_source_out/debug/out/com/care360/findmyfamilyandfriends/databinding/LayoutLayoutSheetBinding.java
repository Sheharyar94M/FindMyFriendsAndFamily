// Generated by view binder compiler. Do not edit!
package com.care360.findmyfamilyandfriends.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.airbnb.lottie.LottieAnimationView;
import com.care360.findmyfamilyandfriends.R;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutLayoutSheetBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RecyclerView allMembersList;

  @NonNull
  public final RelativeLayout bottomSheetMove;

  @NonNull
  public final AppCompatTextView heading;

  @NonNull
  public final AppCompatTextView noMembersFound;

  @NonNull
  public final LottieAnimationView noResultsL;

  @NonNull
  public final TabLayout tabsDatatypeList;

  @NonNull
  public final TabLayout tabsProfileList;

  @NonNull
  public final View view;

  @NonNull
  public final ViewPager2 viewPager;

  private LayoutLayoutSheetBinding(@NonNull RelativeLayout rootView,
      @NonNull RecyclerView allMembersList, @NonNull RelativeLayout bottomSheetMove,
      @NonNull AppCompatTextView heading, @NonNull AppCompatTextView noMembersFound,
      @NonNull LottieAnimationView noResultsL, @NonNull TabLayout tabsDatatypeList,
      @NonNull TabLayout tabsProfileList, @NonNull View view, @NonNull ViewPager2 viewPager) {
    this.rootView = rootView;
    this.allMembersList = allMembersList;
    this.bottomSheetMove = bottomSheetMove;
    this.heading = heading;
    this.noMembersFound = noMembersFound;
    this.noResultsL = noResultsL;
    this.tabsDatatypeList = tabsDatatypeList;
    this.tabsProfileList = tabsProfileList;
    this.view = view;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutLayoutSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutLayoutSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_layout_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutLayoutSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.all_membersList;
      RecyclerView allMembersList = ViewBindings.findChildViewById(rootView, id);
      if (allMembersList == null) {
        break missingId;
      }

      RelativeLayout bottomSheetMove = (RelativeLayout) rootView;

      id = R.id.heading;
      AppCompatTextView heading = ViewBindings.findChildViewById(rootView, id);
      if (heading == null) {
        break missingId;
      }

      id = R.id.noMembersFound;
      AppCompatTextView noMembersFound = ViewBindings.findChildViewById(rootView, id);
      if (noMembersFound == null) {
        break missingId;
      }

      id = R.id.no_results_L;
      LottieAnimationView noResultsL = ViewBindings.findChildViewById(rootView, id);
      if (noResultsL == null) {
        break missingId;
      }

      id = R.id.tabs_datatypeList;
      TabLayout tabsDatatypeList = ViewBindings.findChildViewById(rootView, id);
      if (tabsDatatypeList == null) {
        break missingId;
      }

      id = R.id.tabs_profileList;
      TabLayout tabsProfileList = ViewBindings.findChildViewById(rootView, id);
      if (tabsProfileList == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager2 viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new LayoutLayoutSheetBinding((RelativeLayout) rootView, allMembersList,
          bottomSheetMove, heading, noMembersFound, noResultsL, tabsDatatypeList, tabsProfileList,
          view, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
