// Generated by view binder compiler. Do not edit!
package com.care360.findmyfamilyandfriends.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.legacy.widget.Space;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.care360.findmyfamilyandfriends.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MovementRecordItemviewDotShimmerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView categoryIcon;

  @NonNull
  public final AppCompatImageView categoryIconInvehicle;

  @NonNull
  public final AppCompatImageView categoryIconOnbicycle;

  @NonNull
  public final AppCompatImageView categoryIconOnfoot;

  @NonNull
  public final AppCompatImageView categoryIconRunning;

  @NonNull
  public final AppCompatImageView categoryIconWalk;

  @NonNull
  public final LinearLayout invehicleLayout;

  @NonNull
  public final LinearLayout linearLayout4;

  @NonNull
  public final LinearLayout linearLayout5;

  @NonNull
  public final LinearLayout linearLayout6;

  @NonNull
  public final LinearLayout linearLayout7;

  @NonNull
  public final LinearLayout linearLayout8;

  @NonNull
  public final LinearLayout linearLayout9;

  @NonNull
  public final AppCompatTextView movementLengthInvehicle;

  @NonNull
  public final AppCompatTextView movementLengthOnbicycle;

  @NonNull
  public final AppCompatTextView movementLengthOnfoot;

  @NonNull
  public final AppCompatTextView movementLengthRunning;

  @NonNull
  public final AppCompatTextView movementLengthStill;

  @NonNull
  public final AppCompatTextView movementLengthWalk;

  @NonNull
  public final AppCompatTextView movementNameInvehicle;

  @NonNull
  public final AppCompatTextView movementNameOnbicycle;

  @NonNull
  public final AppCompatTextView movementNameOnfoot;

  @NonNull
  public final AppCompatTextView movementNameRunning;

  @NonNull
  public final AppCompatTextView movementNameStill;

  @NonNull
  public final AppCompatTextView movementNameWalk;

  @NonNull
  public final ConstraintLayout movementRecordLayout;

  @NonNull
  public final AppCompatTextView movementRecordTimeInvehicle;

  @NonNull
  public final AppCompatTextView movementRecordTimeOnbicycle;

  @NonNull
  public final AppCompatTextView movementRecordTimeOnfoot;

  @NonNull
  public final AppCompatTextView movementRecordTimeRunning;

  @NonNull
  public final AppCompatTextView movementRecordTimeStill;

  @NonNull
  public final AppCompatTextView movementRecordTimeWalk;

  @NonNull
  public final LinearLayout onbicycleLayout;

  @NonNull
  public final LinearLayout onfootLayout;

  @NonNull
  public final LinearLayout runningLayout;

  @NonNull
  public final Space s1;

  @NonNull
  public final Space s2;

  @NonNull
  public final Space s3;

  @NonNull
  public final Space s4;

  @NonNull
  public final Space s5;

  @NonNull
  public final LinearLayout stillLayout;

  @NonNull
  public final LinearLayout walkingLayout;

  private MovementRecordItemviewDotShimmerBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView categoryIcon, @NonNull AppCompatImageView categoryIconInvehicle,
      @NonNull AppCompatImageView categoryIconOnbicycle,
      @NonNull AppCompatImageView categoryIconOnfoot,
      @NonNull AppCompatImageView categoryIconRunning, @NonNull AppCompatImageView categoryIconWalk,
      @NonNull LinearLayout invehicleLayout, @NonNull LinearLayout linearLayout4,
      @NonNull LinearLayout linearLayout5, @NonNull LinearLayout linearLayout6,
      @NonNull LinearLayout linearLayout7, @NonNull LinearLayout linearLayout8,
      @NonNull LinearLayout linearLayout9, @NonNull AppCompatTextView movementLengthInvehicle,
      @NonNull AppCompatTextView movementLengthOnbicycle,
      @NonNull AppCompatTextView movementLengthOnfoot,
      @NonNull AppCompatTextView movementLengthRunning,
      @NonNull AppCompatTextView movementLengthStill, @NonNull AppCompatTextView movementLengthWalk,
      @NonNull AppCompatTextView movementNameInvehicle,
      @NonNull AppCompatTextView movementNameOnbicycle,
      @NonNull AppCompatTextView movementNameOnfoot, @NonNull AppCompatTextView movementNameRunning,
      @NonNull AppCompatTextView movementNameStill, @NonNull AppCompatTextView movementNameWalk,
      @NonNull ConstraintLayout movementRecordLayout,
      @NonNull AppCompatTextView movementRecordTimeInvehicle,
      @NonNull AppCompatTextView movementRecordTimeOnbicycle,
      @NonNull AppCompatTextView movementRecordTimeOnfoot,
      @NonNull AppCompatTextView movementRecordTimeRunning,
      @NonNull AppCompatTextView movementRecordTimeStill,
      @NonNull AppCompatTextView movementRecordTimeWalk, @NonNull LinearLayout onbicycleLayout,
      @NonNull LinearLayout onfootLayout, @NonNull LinearLayout runningLayout, @NonNull Space s1,
      @NonNull Space s2, @NonNull Space s3, @NonNull Space s4, @NonNull Space s5,
      @NonNull LinearLayout stillLayout, @NonNull LinearLayout walkingLayout) {
    this.rootView = rootView;
    this.categoryIcon = categoryIcon;
    this.categoryIconInvehicle = categoryIconInvehicle;
    this.categoryIconOnbicycle = categoryIconOnbicycle;
    this.categoryIconOnfoot = categoryIconOnfoot;
    this.categoryIconRunning = categoryIconRunning;
    this.categoryIconWalk = categoryIconWalk;
    this.invehicleLayout = invehicleLayout;
    this.linearLayout4 = linearLayout4;
    this.linearLayout5 = linearLayout5;
    this.linearLayout6 = linearLayout6;
    this.linearLayout7 = linearLayout7;
    this.linearLayout8 = linearLayout8;
    this.linearLayout9 = linearLayout9;
    this.movementLengthInvehicle = movementLengthInvehicle;
    this.movementLengthOnbicycle = movementLengthOnbicycle;
    this.movementLengthOnfoot = movementLengthOnfoot;
    this.movementLengthRunning = movementLengthRunning;
    this.movementLengthStill = movementLengthStill;
    this.movementLengthWalk = movementLengthWalk;
    this.movementNameInvehicle = movementNameInvehicle;
    this.movementNameOnbicycle = movementNameOnbicycle;
    this.movementNameOnfoot = movementNameOnfoot;
    this.movementNameRunning = movementNameRunning;
    this.movementNameStill = movementNameStill;
    this.movementNameWalk = movementNameWalk;
    this.movementRecordLayout = movementRecordLayout;
    this.movementRecordTimeInvehicle = movementRecordTimeInvehicle;
    this.movementRecordTimeOnbicycle = movementRecordTimeOnbicycle;
    this.movementRecordTimeOnfoot = movementRecordTimeOnfoot;
    this.movementRecordTimeRunning = movementRecordTimeRunning;
    this.movementRecordTimeStill = movementRecordTimeStill;
    this.movementRecordTimeWalk = movementRecordTimeWalk;
    this.onbicycleLayout = onbicycleLayout;
    this.onfootLayout = onfootLayout;
    this.runningLayout = runningLayout;
    this.s1 = s1;
    this.s2 = s2;
    this.s3 = s3;
    this.s4 = s4;
    this.s5 = s5;
    this.stillLayout = stillLayout;
    this.walkingLayout = walkingLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MovementRecordItemviewDotShimmerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MovementRecordItemviewDotShimmerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.movement_record_itemview_dot_shimmer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MovementRecordItemviewDotShimmerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.category_icon;
      AppCompatImageView categoryIcon = ViewBindings.findChildViewById(rootView, id);
      if (categoryIcon == null) {
        break missingId;
      }

      id = R.id.category_icon_invehicle;
      AppCompatImageView categoryIconInvehicle = ViewBindings.findChildViewById(rootView, id);
      if (categoryIconInvehicle == null) {
        break missingId;
      }

      id = R.id.category_icon_onbicycle;
      AppCompatImageView categoryIconOnbicycle = ViewBindings.findChildViewById(rootView, id);
      if (categoryIconOnbicycle == null) {
        break missingId;
      }

      id = R.id.category_icon_onfoot;
      AppCompatImageView categoryIconOnfoot = ViewBindings.findChildViewById(rootView, id);
      if (categoryIconOnfoot == null) {
        break missingId;
      }

      id = R.id.category_icon_running;
      AppCompatImageView categoryIconRunning = ViewBindings.findChildViewById(rootView, id);
      if (categoryIconRunning == null) {
        break missingId;
      }

      id = R.id.category_icon_walk;
      AppCompatImageView categoryIconWalk = ViewBindings.findChildViewById(rootView, id);
      if (categoryIconWalk == null) {
        break missingId;
      }

      id = R.id.invehicle_layout;
      LinearLayout invehicleLayout = ViewBindings.findChildViewById(rootView, id);
      if (invehicleLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout4;
      LinearLayout linearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout4 == null) {
        break missingId;
      }

      id = R.id.linearLayout5;
      LinearLayout linearLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout5 == null) {
        break missingId;
      }

      id = R.id.linearLayout6;
      LinearLayout linearLayout6 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout6 == null) {
        break missingId;
      }

      id = R.id.linearLayout7;
      LinearLayout linearLayout7 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout7 == null) {
        break missingId;
      }

      id = R.id.linearLayout8;
      LinearLayout linearLayout8 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout8 == null) {
        break missingId;
      }

      id = R.id.linearLayout9;
      LinearLayout linearLayout9 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout9 == null) {
        break missingId;
      }

      id = R.id.movement_length_invehicle;
      AppCompatTextView movementLengthInvehicle = ViewBindings.findChildViewById(rootView, id);
      if (movementLengthInvehicle == null) {
        break missingId;
      }

      id = R.id.movement_length_onbicycle;
      AppCompatTextView movementLengthOnbicycle = ViewBindings.findChildViewById(rootView, id);
      if (movementLengthOnbicycle == null) {
        break missingId;
      }

      id = R.id.movement_length_onfoot;
      AppCompatTextView movementLengthOnfoot = ViewBindings.findChildViewById(rootView, id);
      if (movementLengthOnfoot == null) {
        break missingId;
      }

      id = R.id.movement_length_running;
      AppCompatTextView movementLengthRunning = ViewBindings.findChildViewById(rootView, id);
      if (movementLengthRunning == null) {
        break missingId;
      }

      id = R.id.movement_length_still;
      AppCompatTextView movementLengthStill = ViewBindings.findChildViewById(rootView, id);
      if (movementLengthStill == null) {
        break missingId;
      }

      id = R.id.movement_length_walk;
      AppCompatTextView movementLengthWalk = ViewBindings.findChildViewById(rootView, id);
      if (movementLengthWalk == null) {
        break missingId;
      }

      id = R.id.movement_name_invehicle;
      AppCompatTextView movementNameInvehicle = ViewBindings.findChildViewById(rootView, id);
      if (movementNameInvehicle == null) {
        break missingId;
      }

      id = R.id.movement_name_onbicycle;
      AppCompatTextView movementNameOnbicycle = ViewBindings.findChildViewById(rootView, id);
      if (movementNameOnbicycle == null) {
        break missingId;
      }

      id = R.id.movement_name_onfoot;
      AppCompatTextView movementNameOnfoot = ViewBindings.findChildViewById(rootView, id);
      if (movementNameOnfoot == null) {
        break missingId;
      }

      id = R.id.movement_name_running;
      AppCompatTextView movementNameRunning = ViewBindings.findChildViewById(rootView, id);
      if (movementNameRunning == null) {
        break missingId;
      }

      id = R.id.movement_name_still;
      AppCompatTextView movementNameStill = ViewBindings.findChildViewById(rootView, id);
      if (movementNameStill == null) {
        break missingId;
      }

      id = R.id.movement_name_walk;
      AppCompatTextView movementNameWalk = ViewBindings.findChildViewById(rootView, id);
      if (movementNameWalk == null) {
        break missingId;
      }

      ConstraintLayout movementRecordLayout = (ConstraintLayout) rootView;

      id = R.id.movement_recordTime_invehicle;
      AppCompatTextView movementRecordTimeInvehicle = ViewBindings.findChildViewById(rootView, id);
      if (movementRecordTimeInvehicle == null) {
        break missingId;
      }

      id = R.id.movement_recordTime_onbicycle;
      AppCompatTextView movementRecordTimeOnbicycle = ViewBindings.findChildViewById(rootView, id);
      if (movementRecordTimeOnbicycle == null) {
        break missingId;
      }

      id = R.id.movement_recordTime_onfoot;
      AppCompatTextView movementRecordTimeOnfoot = ViewBindings.findChildViewById(rootView, id);
      if (movementRecordTimeOnfoot == null) {
        break missingId;
      }

      id = R.id.movement_recordTime_running;
      AppCompatTextView movementRecordTimeRunning = ViewBindings.findChildViewById(rootView, id);
      if (movementRecordTimeRunning == null) {
        break missingId;
      }

      id = R.id.movement_recordTime_still;
      AppCompatTextView movementRecordTimeStill = ViewBindings.findChildViewById(rootView, id);
      if (movementRecordTimeStill == null) {
        break missingId;
      }

      id = R.id.movement_recordTime_walk;
      AppCompatTextView movementRecordTimeWalk = ViewBindings.findChildViewById(rootView, id);
      if (movementRecordTimeWalk == null) {
        break missingId;
      }

      id = R.id.onbicycle_layout;
      LinearLayout onbicycleLayout = ViewBindings.findChildViewById(rootView, id);
      if (onbicycleLayout == null) {
        break missingId;
      }

      id = R.id.onfoot_layout;
      LinearLayout onfootLayout = ViewBindings.findChildViewById(rootView, id);
      if (onfootLayout == null) {
        break missingId;
      }

      id = R.id.running_layout;
      LinearLayout runningLayout = ViewBindings.findChildViewById(rootView, id);
      if (runningLayout == null) {
        break missingId;
      }

      id = R.id.s1;
      Space s1 = ViewBindings.findChildViewById(rootView, id);
      if (s1 == null) {
        break missingId;
      }

      id = R.id.s2;
      Space s2 = ViewBindings.findChildViewById(rootView, id);
      if (s2 == null) {
        break missingId;
      }

      id = R.id.s3;
      Space s3 = ViewBindings.findChildViewById(rootView, id);
      if (s3 == null) {
        break missingId;
      }

      id = R.id.s4;
      Space s4 = ViewBindings.findChildViewById(rootView, id);
      if (s4 == null) {
        break missingId;
      }

      id = R.id.s5;
      Space s5 = ViewBindings.findChildViewById(rootView, id);
      if (s5 == null) {
        break missingId;
      }

      id = R.id.still_layout;
      LinearLayout stillLayout = ViewBindings.findChildViewById(rootView, id);
      if (stillLayout == null) {
        break missingId;
      }

      id = R.id.walking_layout;
      LinearLayout walkingLayout = ViewBindings.findChildViewById(rootView, id);
      if (walkingLayout == null) {
        break missingId;
      }

      return new MovementRecordItemviewDotShimmerBinding((ConstraintLayout) rootView, categoryIcon,
          categoryIconInvehicle, categoryIconOnbicycle, categoryIconOnfoot, categoryIconRunning,
          categoryIconWalk, invehicleLayout, linearLayout4, linearLayout5, linearLayout6,
          linearLayout7, linearLayout8, linearLayout9, movementLengthInvehicle,
          movementLengthOnbicycle, movementLengthOnfoot, movementLengthRunning, movementLengthStill,
          movementLengthWalk, movementNameInvehicle, movementNameOnbicycle, movementNameOnfoot,
          movementNameRunning, movementNameStill, movementNameWalk, movementRecordLayout,
          movementRecordTimeInvehicle, movementRecordTimeOnbicycle, movementRecordTimeOnfoot,
          movementRecordTimeRunning, movementRecordTimeStill, movementRecordTimeWalk,
          onbicycleLayout, onfootLayout, runningLayout, s1, s2, s3, s4, s5, stillLayout,
          walkingLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
