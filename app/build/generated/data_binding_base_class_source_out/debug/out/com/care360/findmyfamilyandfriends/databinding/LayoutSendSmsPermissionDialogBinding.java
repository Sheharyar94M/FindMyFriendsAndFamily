// Generated by view binder compiler. Do not edit!
package com.care360.findmyfamilyandfriends.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.care360.findmyfamilyandfriends.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutSendSmsPermissionDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnAllowPermission;

  @NonNull
  public final TextView denyPermission;

  @NonNull
  public final TextView subTitle;

  @NonNull
  public final TextView title;

  private LayoutSendSmsPermissionDialogBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnAllowPermission, @NonNull TextView denyPermission,
      @NonNull TextView subTitle, @NonNull TextView title) {
    this.rootView = rootView;
    this.btnAllowPermission = btnAllowPermission;
    this.denyPermission = denyPermission;
    this.subTitle = subTitle;
    this.title = title;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutSendSmsPermissionDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutSendSmsPermissionDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_send_sms_permission_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutSendSmsPermissionDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_allow_permission;
      AppCompatButton btnAllowPermission = ViewBindings.findChildViewById(rootView, id);
      if (btnAllowPermission == null) {
        break missingId;
      }

      id = R.id.deny_permission;
      TextView denyPermission = ViewBindings.findChildViewById(rootView, id);
      if (denyPermission == null) {
        break missingId;
      }

      id = R.id.sub_title;
      TextView subTitle = ViewBindings.findChildViewById(rootView, id);
      if (subTitle == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new LayoutSendSmsPermissionDialogBinding((ConstraintLayout) rootView,
          btnAllowPermission, denyPermission, subTitle, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
