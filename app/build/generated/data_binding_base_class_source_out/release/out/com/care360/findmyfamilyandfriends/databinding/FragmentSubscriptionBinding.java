// Generated by view binder compiler. Do not edit!
package com.care360.findmyfamilyandfriends.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.care360.findmyfamilyandfriends.R;
import com.facebook.shimmer.ShimmerFrameLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSubscriptionBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FrameLayout adaptiveBanner;

  @NonNull
  public final RecyclerView features;

  @NonNull
  public final FeaturesItemviewShimmerBinding item1Feat;

  @NonNull
  public final SubscriptionlistItemviewShimmerBinding item1Prod;

  @NonNull
  public final FeaturesItemviewShimmerBinding item2Feat;

  @NonNull
  public final SubscriptionlistItemviewShimmerBinding item2Prod;

  @NonNull
  public final FeaturesItemviewShimmerBinding item3Feat;

  @NonNull
  public final SubscriptionlistItemviewShimmerBinding item3Prod;

  @NonNull
  public final LottieAnimationView noResultsFeatures;

  @NonNull
  public final LottieAnimationView noResultsProducts;

  @NonNull
  public final AppCompatTextView nothingFoundFeatures;

  @NonNull
  public final RelativeLayout nothingFoundLayoutFeatures;

  @NonNull
  public final RelativeLayout nothingFoundLayoutProducts;

  @NonNull
  public final AppCompatTextView nothingFoundProducts;

  @NonNull
  public final AppCompatTextView priceMonth;

  @NonNull
  public final RecyclerView productList;

  @NonNull
  public final ShimmerFrameLayout shimmerLayoutFeatures;

  @NonNull
  public final ShimmerFrameLayout shimmerLayoutProducts;

  @NonNull
  public final AppCompatButton startTrialButton;

  @NonNull
  public final AppCompatTextView text;

  @NonNull
  public final AppCompatTextView text1;

  private FragmentSubscriptionBinding(@NonNull FrameLayout rootView,
      @NonNull FrameLayout adaptiveBanner, @NonNull RecyclerView features,
      @NonNull FeaturesItemviewShimmerBinding item1Feat,
      @NonNull SubscriptionlistItemviewShimmerBinding item1Prod,
      @NonNull FeaturesItemviewShimmerBinding item2Feat,
      @NonNull SubscriptionlistItemviewShimmerBinding item2Prod,
      @NonNull FeaturesItemviewShimmerBinding item3Feat,
      @NonNull SubscriptionlistItemviewShimmerBinding item3Prod,
      @NonNull LottieAnimationView noResultsFeatures,
      @NonNull LottieAnimationView noResultsProducts,
      @NonNull AppCompatTextView nothingFoundFeatures,
      @NonNull RelativeLayout nothingFoundLayoutFeatures,
      @NonNull RelativeLayout nothingFoundLayoutProducts,
      @NonNull AppCompatTextView nothingFoundProducts, @NonNull AppCompatTextView priceMonth,
      @NonNull RecyclerView productList, @NonNull ShimmerFrameLayout shimmerLayoutFeatures,
      @NonNull ShimmerFrameLayout shimmerLayoutProducts, @NonNull AppCompatButton startTrialButton,
      @NonNull AppCompatTextView text, @NonNull AppCompatTextView text1) {
    this.rootView = rootView;
    this.adaptiveBanner = adaptiveBanner;
    this.features = features;
    this.item1Feat = item1Feat;
    this.item1Prod = item1Prod;
    this.item2Feat = item2Feat;
    this.item2Prod = item2Prod;
    this.item3Feat = item3Feat;
    this.item3Prod = item3Prod;
    this.noResultsFeatures = noResultsFeatures;
    this.noResultsProducts = noResultsProducts;
    this.nothingFoundFeatures = nothingFoundFeatures;
    this.nothingFoundLayoutFeatures = nothingFoundLayoutFeatures;
    this.nothingFoundLayoutProducts = nothingFoundLayoutProducts;
    this.nothingFoundProducts = nothingFoundProducts;
    this.priceMonth = priceMonth;
    this.productList = productList;
    this.shimmerLayoutFeatures = shimmerLayoutFeatures;
    this.shimmerLayoutProducts = shimmerLayoutProducts;
    this.startTrialButton = startTrialButton;
    this.text = text;
    this.text1 = text1;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSubscriptionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSubscriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_subscription, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSubscriptionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adaptiveBanner;
      FrameLayout adaptiveBanner = ViewBindings.findChildViewById(rootView, id);
      if (adaptiveBanner == null) {
        break missingId;
      }

      id = R.id.features;
      RecyclerView features = ViewBindings.findChildViewById(rootView, id);
      if (features == null) {
        break missingId;
      }

      id = R.id.item1_feat;
      View item1Feat = ViewBindings.findChildViewById(rootView, id);
      if (item1Feat == null) {
        break missingId;
      }
      FeaturesItemviewShimmerBinding binding_item1Feat = FeaturesItemviewShimmerBinding.bind(item1Feat);

      id = R.id.item1_prod;
      View item1Prod = ViewBindings.findChildViewById(rootView, id);
      if (item1Prod == null) {
        break missingId;
      }
      SubscriptionlistItemviewShimmerBinding binding_item1Prod = SubscriptionlistItemviewShimmerBinding.bind(item1Prod);

      id = R.id.item2_feat;
      View item2Feat = ViewBindings.findChildViewById(rootView, id);
      if (item2Feat == null) {
        break missingId;
      }
      FeaturesItemviewShimmerBinding binding_item2Feat = FeaturesItemviewShimmerBinding.bind(item2Feat);

      id = R.id.item2_prod;
      View item2Prod = ViewBindings.findChildViewById(rootView, id);
      if (item2Prod == null) {
        break missingId;
      }
      SubscriptionlistItemviewShimmerBinding binding_item2Prod = SubscriptionlistItemviewShimmerBinding.bind(item2Prod);

      id = R.id.item3_feat;
      View item3Feat = ViewBindings.findChildViewById(rootView, id);
      if (item3Feat == null) {
        break missingId;
      }
      FeaturesItemviewShimmerBinding binding_item3Feat = FeaturesItemviewShimmerBinding.bind(item3Feat);

      id = R.id.item3_prod;
      View item3Prod = ViewBindings.findChildViewById(rootView, id);
      if (item3Prod == null) {
        break missingId;
      }
      SubscriptionlistItemviewShimmerBinding binding_item3Prod = SubscriptionlistItemviewShimmerBinding.bind(item3Prod);

      id = R.id.no_results_features;
      LottieAnimationView noResultsFeatures = ViewBindings.findChildViewById(rootView, id);
      if (noResultsFeatures == null) {
        break missingId;
      }

      id = R.id.no_results_products;
      LottieAnimationView noResultsProducts = ViewBindings.findChildViewById(rootView, id);
      if (noResultsProducts == null) {
        break missingId;
      }

      id = R.id.nothingFoundFeatures;
      AppCompatTextView nothingFoundFeatures = ViewBindings.findChildViewById(rootView, id);
      if (nothingFoundFeatures == null) {
        break missingId;
      }

      id = R.id.nothing_found_layout_features;
      RelativeLayout nothingFoundLayoutFeatures = ViewBindings.findChildViewById(rootView, id);
      if (nothingFoundLayoutFeatures == null) {
        break missingId;
      }

      id = R.id.nothing_found_layout_products;
      RelativeLayout nothingFoundLayoutProducts = ViewBindings.findChildViewById(rootView, id);
      if (nothingFoundLayoutProducts == null) {
        break missingId;
      }

      id = R.id.nothingFoundProducts;
      AppCompatTextView nothingFoundProducts = ViewBindings.findChildViewById(rootView, id);
      if (nothingFoundProducts == null) {
        break missingId;
      }

      id = R.id.price_month;
      AppCompatTextView priceMonth = ViewBindings.findChildViewById(rootView, id);
      if (priceMonth == null) {
        break missingId;
      }

      id = R.id.productList;
      RecyclerView productList = ViewBindings.findChildViewById(rootView, id);
      if (productList == null) {
        break missingId;
      }

      id = R.id.shimmer_layout_features;
      ShimmerFrameLayout shimmerLayoutFeatures = ViewBindings.findChildViewById(rootView, id);
      if (shimmerLayoutFeatures == null) {
        break missingId;
      }

      id = R.id.shimmer_layout_products;
      ShimmerFrameLayout shimmerLayoutProducts = ViewBindings.findChildViewById(rootView, id);
      if (shimmerLayoutProducts == null) {
        break missingId;
      }

      id = R.id.start_trial_button;
      AppCompatButton startTrialButton = ViewBindings.findChildViewById(rootView, id);
      if (startTrialButton == null) {
        break missingId;
      }

      id = R.id.text;
      AppCompatTextView text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }

      id = R.id.text1;
      AppCompatTextView text1 = ViewBindings.findChildViewById(rootView, id);
      if (text1 == null) {
        break missingId;
      }

      return new FragmentSubscriptionBinding((FrameLayout) rootView, adaptiveBanner, features,
          binding_item1Feat, binding_item1Prod, binding_item2Feat, binding_item2Prod,
          binding_item3Feat, binding_item3Prod, noResultsFeatures, noResultsProducts,
          nothingFoundFeatures, nothingFoundLayoutFeatures, nothingFoundLayoutProducts,
          nothingFoundProducts, priceMonth, productList, shimmerLayoutFeatures,
          shimmerLayoutProducts, startTrialButton, text, text1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
